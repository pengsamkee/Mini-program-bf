"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var webAPI = require("../../../api/app/AppService");
var globalEnum = require("../../../api/GlobalEnum");
var interface_1 = require("../../../api/app/interface");
var app = getApp();
var chart = null;
var data = [];
function initChart(canvas, width, height, F2) {
    var map = {};
    data.forEach(function (obj) {
        console.log(obj);
        if (obj.name === '蛋白质') {
            return map[obj.name] = ' ' + ' ' + ' ' + ' ' + ' ' + obj.percent + '%';
        }
        else if (obj.name === '脂肪') {
            return map[obj.name] = ' ' + ' ' + ' ' + ' ' + ' ' + ' ' + ' ' + ' ' + obj.percent + '%';
        }
        else {
            map[obj.name] = ' ' + obj.percent + '%';
        }
    });
    chart = new F2.Chart({
        el: canvas,
        width: width,
        height: height
    });
    chart.source(data, {
        percent: {
            formatter: function formatter(val) {
                return val + '%';
            }
        }
    });
    chart.tooltip(false);
    chart.legend({
        position: 'right',
        itemFormatter: function itemFormatter(val) {
            return val + ' ' + map[val];
        }
    });
    chart.coord('polar', {
        transposed: true,
        innerRadius: 0.7,
        radius: 1
    });
    chart.axis(false);
    chart.interval()
        .position('a*percent')
        .color('name', ['#FFB400', '#FF5C47', '#FF822D'])
        .adjust('stack');
    chart.render();
    return chart;
}
var NutritionDetail = (function () {
    function NutritionDetail() {
        this.data = {
            foodInfo: {},
            micro: {},
            options: {},
        };
    }
    NutritionDetail.prototype.onLoad = function (options) {
        webAPI.SetAuthToken(wx.getStorageSync(globalEnum.globalKey_token));
        options.foodId = Number(options.foodId);
        options.foodType = Number(options.foodType);
        this.setData({
            options: options
        });
    };
    NutritionDetail.prototype.onReady = function () {
        this.getFoodNutritions(this.data.options);
    };
    NutritionDetail.prototype.getFoodNutritions = function (options) {
        var that = this;
        wx.showLoading({ title: "加载中..." });
        interface_1.default.foodNutritions(options).then(function (res) {
            var foodInfo = res.foodInfo, micro = res.micro;
            foodInfo.contentEnergy = Math.round(foodInfo.contentEnergy);
            var total = 0;
            foodInfo.mainNutrients.map(function (item) {
                item.content = Number(item.content.toFixed(1));
                total += item.content;
            });
            that.setData({
                foodInfo: foodInfo,
                micro: micro
            });
            var newData = [];
            foodInfo.mainNutrients.map(function (item) {
                item.percent = Math.round(item.content * 100 / total);
                item.a = '1';
                newData.push(item);
            });
            data = newData;
            var salesTrendChartComponent = that.selectComponent('#canvasf2');
            salesTrendChartComponent.init(initChart);
            wx.hideLoading();
        }).catch(function (err) {
            wx.hideLoading();
            wx.showToast({
                title: '获取数据失败',
                icon: 'none'
            });
        });
    };
    return NutritionDetail;
}());
Page(new NutritionDetail());
//# sourceMappingURL=data:application/json;base64,