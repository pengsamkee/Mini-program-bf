"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var interface_1 = require("../../api/app/interface");
var QueryCalories = (function () {
    function QueryCalories() {
        this.data = {
            activeIndex: 0,
            showLoading: false,
            scrollTop: 0,
            curNav: 'A',
            list: null,
            scrollTopId: '',
            queryArr: [],
        };
    }
    QueryCalories.prototype.getCheckNutrientFoodList = function () {
        var that = this;
        interface_1.default.checkNutrientFoodList().then(function (res) {
            that.formatList(res);
        }).catch(function (err) {
            wx.showToast({
                title: '服务器开小差,稍后请重试',
                icon: 'none',
            });
        });
    };
    QueryCalories.prototype.onShow = function () {
        var that = this;
        setTimeout(function () {
            if (that.data.list === null) {
                that.getCheckNutrientFoodList();
            }
        }, 4000);
    };
    QueryCalories.prototype.formatList = function (res) {
        var _this = this;
        var key = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];
        var list = {};
        res.map(function (item, index) {
            list[key[index]] = [
                { name: item.efficacyName }
            ].concat(item.foodList);
        });
        this.setData({
            list: list
        }, function () {
            _this.getQueryArr();
        });
    };
    QueryCalories.prototype.getQueryArr = function () {
        var that = this;
        var query = wx.createSelectorQuery();
        for (var index in that.data.list) {
            query.select("#" + index).boundingClientRect();
        }
        query.exec(function (res) {
            res.map(function (i) { return i.top -= 66; });
            that.setData({
                queryArr: res
            });
        });
    };
    QueryCalories.prototype.onReady = function () {
        this.getCheckNutrientFoodList();
    };
    QueryCalories.prototype.goSearchFood = function () {
        wx.navigateTo({
            url: '/checkNutrition/pages/searchFood/index'
        });
    };
    QueryCalories.prototype.scrollToLower = function () {
        var that = this;
        if (this.data.category[this.data.activeIndex].totalPage == 1) {
            return false;
        }
        that.setData({
            showLoading: true
        });
        setTimeout(function () {
            that.setData({
                showLoading: false
            });
        }, 2000);
    };
    QueryCalories.prototype.handleTapCategoryItem = function (e) {
        var idx = e.target.dataset.categoryIndex;
        this.setData({
            activeIndex: idx,
        });
        if (this.data.category.length - idx < 5) {
            this.setData({
                scrollTop: 99999,
            });
        }
    };
    QueryCalories.prototype.goNutritionDetil = function (e) {
        console.log(e.currentTarget.dataset.itemId);
        var id = e.currentTarget.dataset.itemId;
        wx.navigateTo({
            url: "/checkNutrition/pages/nutritionDetail/index?id=" + id
        });
    };
    QueryCalories.prototype.switchRightTab = function (e) {
        var id = e.target.dataset.id;
        console.log(typeof id);
        this.setData({
            scrollTopId: id,
            curNav: id
        });
    };
    QueryCalories.prototype.bindscroll = function (e) {
        var viewItemArr = this.data.queryArr.map(function (item) {
            if (e.detail.scrollTop > item.top) {
                return item.id;
            }
        });
        var str = viewItemArr.join('');
        var curId = str.substr(str.length - 1);
        curId = curId ? curId : 'A';
        this.setData({ curNav: curId });
    };
    QueryCalories.prototype.onTapFoodItem = function (e) {
        var foodId = e.currentTarget.dataset.foodId;
        var foodType = e.currentTarget.dataset.foodType;
        wx.navigateTo({
            url: "../../checkNutrition/pages/nutritionDetail/index?foodId=" + foodId + "&foodType=" + foodType
        });
    };
    return QueryCalories;
}());
Page(new QueryCalories());
//# sourceMappingURL=data:application/json;base64,