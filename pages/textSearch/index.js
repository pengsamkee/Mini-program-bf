"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var webAPI = require("../../api/app/AppService");
var globalEnum = require("../../api/GlobalEnum");
var textCache = require("./textCache/TextCache");
var textSearch = (function () {
    function textSearch() {
        this.filterType = 0;
        this.mealType = 0;
        this.naviType = 0;
        this.mealDate = 0;
        this.data = {
            keyword: "",
            inputShowed: false,
            resultList: [],
            resultError: [],
            recentList: []
        };
    }
    textSearch.prototype.onLoad = function (options) {
        webAPI.SetAuthToken(wx.getStorageSync(globalEnum.globalKey_token));
        console.log(wx.getStorageSync(globalEnum.globalKey_token));
        var title = options.title;
        this.filterType = parseInt(options.filterType);
        this.mealType = parseInt(options.mealType);
        this.naviType = parseInt(options.naviType);
        this.mealDate = parseInt(options.mealDate);
        wx.setNavigationBarTitle({
            title: "添加" + title
        });
    };
    textSearch.prototype.onShow = function () {
        if (this.data.resultList.length === 0) {
            this.getRecentList();
        }
    };
    textSearch.prototype.getRecentList = function () {
        var recentList = textCache.getAllValue();
        console.log(recentList);
        this.setData({
            recentList: recentList
        });
    };
    textSearch.prototype.showInput = function () {
        this.setData({
            inputShowed: true
        });
    };
    textSearch.prototype.clearInput = function () {
        this.setData({
            keyword: "",
            resultError: false
        });
    };
    textSearch.prototype.inputTyping = function (event) {
        this.setData({
            resultError: false,
            keyword: event.detail.value,
        });
    };
    textSearch.prototype.performSearch = function () {
        var keyword = this.data.keyword;
        var req = { query: keyword, filter_type: this.filterType, meal_type: this.mealType };
        console.log(req);
        var that = this;
        webAPI.RetrieveTextSearch(req).then(function (resp) {
            console.log(resp);
            that.setResultList(resp);
        }).catch(function (err) { return console.log(err); });
    };
    textSearch.prototype.setResultList = function (resp) {
        var results = [];
        if (resp.result_list.length == 0) {
            this.setData({
                resultList: [],
                resultError: true
            });
        }
        else {
            for (var index in resp.result_list) {
                var item = resp.result_list[index];
                var result = {
                    foodId: item.food_id,
                    foodName: item.food_name,
                    foodType: item.food_type,
                    amount: item.amount,
                    unit: item.unit_name,
                    energy: Math.floor(item.energy / 100)
                };
                results.push(result);
            }
            this.setData({
                resultList: results,
                resultError: false
            });
        }
        console.log(this.data.resultList);
    };
    textSearch.prototype.onTextSearchResultSelect = function (event) {
        var index = event.currentTarget.dataset.textIndex;
        var foodId = this.data.resultList[index].foodId;
        var foodName = this.data.resultList[index].foodName;
        var foodType = this.data.resultList[index].foodType;
        var imageUrl = "https://dietlens-1258665547.cos.ap-shanghai.myqcloud.com/mini-app-image/defaultImage/textsearch-default-image.png";
        if (this.naviType === 0) {
            wx.showLoading({ title: "加载中...", mask: true });
            var results = [{ food_id: foodId, food_name: foodName, food_type: foodType }];
            var food = { food_id: foodId, input_type: 2, food_type: foodType, recognition_results: results };
            var foodList = [food];
            var req = { meal_id: -1, meal_type: this.mealType, meal_date: this.mealDate, food_list: foodList };
            webAPI.CreateOrUpdateMealLog(req).then(function (resp) {
                wx.hideLoading({});
                var param = {};
                param.mealId = resp.meal_id;
                param.imageUrl = imageUrl;
                param.showShareBtn = false;
                var paramJson = JSON.stringify(param);
                wx.navigateTo({
                    url: "/pages/foodDetail/index?paramJson=" + paramJson
                });
            }).catch(function (err) {
                console.log(err);
                wx.hideLoading({});
            });
        }
        else {
            var pages = getCurrentPages();
            var prevPage = pages[pages.length - 2];
            prevPage.textSearchFood = { food_id: foodId, food_name: foodName, food_type: foodType };
            wx.navigateBack({
                delta: 1
            });
        }
        textCache.setValue(this.data.resultList[index]);
    };
    textSearch.prototype.onRecentResultSelect = function (event) {
        var index = event.currentTarget.dataset.textIndex;
        var foodId = this.data.recentList[index].foodId;
        var foodName = this.data.recentList[index].foodName;
        var foodType = this.data.recentList[index].foodType;
        var imageUrl = "https://dietlens-1258665547.cos.ap-shanghai.myqcloud.com/mini-app-image/defaultImage/textsearch-default-image.png";
        if (this.naviType === 0) {
            wx.showLoading({ title: "加载中...", mask: true });
            var results = [{ food_id: foodId, food_name: foodName, food_type: foodType }];
            var food = { food_id: foodId, input_type: 2, food_type: foodType, recognition_results: results };
            var foodList = [food];
            var req = { meal_id: -1, meal_type: this.mealType, meal_date: this.mealDate, food_list: foodList };
            webAPI.CreateOrUpdateMealLog(req).then(function (resp) {
                wx.hideLoading({});
                var param = {};
                param.mealId = resp.meal_id;
                param.imageUrl = imageUrl;
                param.showShareBtn = false;
                var paramJson = JSON.stringify(param);
                wx.navigateTo({
                    url: "/pages/foodDetail/index?paramJson=" + paramJson
                });
            }).catch(function (err) {
                console.log(err);
                wx.hideLoading({});
            });
        }
        else {
            var pages = getCurrentPages();
            var prevPage = pages[pages.length - 2];
            prevPage.textSearchFood = { food_id: foodId, food_name: foodName, food_type: foodType };
            wx.navigateBack({
                delta: 1
            });
        }
        textCache.setValue(this.data.recentList[index]);
    };
    textSearch.prototype.deleteTextSearchCache = function (event) {
        textCache.clearAll();
        this.getRecentList();
    };
    return textSearch;
}());
Page(new textSearch());
//# sourceMappingURL=data:application/json;base64,