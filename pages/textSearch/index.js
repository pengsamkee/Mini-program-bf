"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var webAPI = require("../../api/app/AppService");
var interface_1 = require("../../api/app/interface");
var globalEnum = require("../../api/GlobalEnum");
var textCache = require("./textCache/TextCache");
var textSearch = (function () {
    function textSearch() {
        this.filterType = 0;
        this.mealType = 0;
        this.naviType = 0;
        this.mealDate = 0;
        this.data = {
            keyword: "",
            inputShowed: false,
            resultList: [],
            resultError: [],
            recentList: [],
            commonFoodList: [],
            showChoosedLists: false,
            showChoosedConfirm: false,
            showPopup: false,
            showPicker: false,
            choosedLists: [],
            unitArr: ['克', '碗', '把', '捧', '盆', '瓢'],
            foodUnitAndUnitEnergy: [],
            foodNumValue: 100,
            foodNumValueMaxlength: 3,
            chooseUinitIndex: 0,
            textSearchResultSelectIndex: null,
            recentResultSelectIndex: null,
            commonFoodIndex: null,
            totalEnergy: 0,
        };
    }
    textSearch.prototype.onLoad = function (options) {
        webAPI.SetAuthToken(wx.getStorageSync(globalEnum.globalKey_token));
        var title = options.title;
        this.filterType = parseInt(options.filterType);
        this.mealType = parseInt(options.mealType);
        this.naviType = parseInt(options.naviType);
        this.mealDate = parseInt(options.mealDate);
        wx.setNavigationBarTitle({
            title: "添加" + title
        });
        this.getCommonFoodList();
    };
    textSearch.prototype.onShow = function () {
        this.getRecentList();
    };
    textSearch.prototype.getCommonFoodList = function () {
        var that = this;
        interface_1.default.commonFoodList({}).then(function (res) {
            that.setData({ commonFoodList: res });
        }).catch(function (err) {
            console.log(err);
        });
    };
    textSearch.prototype.getRecentList = function () {
        var recentList = textCache.getAllValue();
        this.setData({
            recentList: recentList
        });
    };
    textSearch.prototype.showInput = function () {
        this.setData({
            inputShowed: true
        });
    };
    textSearch.prototype.clearInput = function () {
        this.setData({
            keyword: "",
            resultError: false,
            resultList: []
        });
    };
    textSearch.prototype.inputTyping = function (event) {
        this.setData({
            resultError: false,
            keyword: event.detail.value,
        });
    };
    textSearch.prototype.performSearch = function () {
        var keyword = this.data.keyword;
        var req = { query: keyword, filter_type: this.filterType, meal_type: this.mealType };
        var that = this;
        wx.showLoading({
            title: '加载中...'
        });
        webAPI.RetrieveTextSearch(req).then(function (resp) {
            wx.hideLoading();
            that.setResultList(resp);
        }).catch(function (err) { return console.log(err); });
    };
    textSearch.prototype.setResultList = function (resp) {
        var results = [];
        if (resp.result_list.length == 0) {
            this.setData({
                resultList: [],
                resultError: true
            });
        }
        else {
            for (var index in resp.result_list) {
                var item = resp.result_list[index];
                var result = {
                    foodId: item.food_id,
                    foodName: item.food_name,
                    foodType: item.food_type,
                    amount: item.amount,
                    unit: item.unit_name,
                    energy: Math.floor(item.energy / 100)
                };
                results.push(result);
            }
            this.setData({
                resultList: results,
                resultError: false
            });
        }
        console.log(this.data.resultList);
    };
    textSearch.prototype.onTextSearchResultSelect = function (event) {
        var _this = this;
        var index = event.currentTarget.dataset.textIndex;
        var unit_option = [
            { "unit_name": "克", "weight": 800, "unit_id": 70 },
            { "unit_name": "鸡蛋大小", "weight": 36000, "unit_id": 74 },
            { "unit_name": "碗", "weight": 21000, "unit_id": 74 }
        ];
        var arr = unit_option.map(function (item) {
            return ({
                'name': item.unit_name,
                'unitEnergy': item.weight / 100,
                'unit_id': item.unit_id
            });
        });
        var nameArr = arr.map(function (item) { return item.name; });
        this.setData({
            recentResultSelectIndex: null,
            commonFoodIndex: null,
            foodNumValue: 100,
            chooseUinitIndex: 0,
            textSearchResultSelectIndex: index,
            unitArr: nameArr,
            foodUnitAndUnitEnergy: arr,
            showPopup: true
        }, function () {
            textCache.setValue(_this.data.resultList[index]);
            _this.getRecentList();
        });
    };
    textSearch.prototype.handleTapCommonFoodItem = function (event) {
        var index = event.currentTarget.dataset.textIndex;
        var unit_option = [
            { "unit_name": "克", "weight": 800, "unit_id": 70 },
            { "unit_name": "鸡蛋大小", "weight": 36000, "unit_id": 74 },
            { "unit_name": "碗", "weight": 21000, "unit_id": 74 }
        ];
        var arr = unit_option.map(function (item) {
            return ({
                'name': item.unit_name,
                'unitEnergy': item.weight / 100,
                'unit_id': item.unit_id
            });
        });
        var nameArr = arr.map(function (item) { return item.name; });
        this.setData({
            textSearchResultSelectIndex: null,
            recentResultSelectIndex: null,
            foodNumValue: 100,
            chooseUinitIndex: 0,
            commonFoodIndex: index,
            unitArr: nameArr,
            foodUnitAndUnitEnergy: arr,
            showPopup: true
        });
        textCache.setValue(this.data.commonFoodList[index]);
    };
    textSearch.prototype.onRecentResultSelect = function (event) {
        var index = event.currentTarget.dataset.textIndex;
        var unit_option = [
            { "unit_name": "克", "weight": 800, "unit_id": 70 },
            { "unit_name": "鸡蛋大小", "weight": 36000, "unit_id": 74 },
            { "unit_name": "碗", "weight": 21000, "unit_id": 74 }
        ];
        var arr = unit_option.map(function (item) {
            return ({
                'name': item.unit_name,
                'unitEnergy': item.weight / 100,
                'unit_id': item.unit_id
            });
        });
        var nameArr = arr.map(function (item) { return item.name; });
        this.setData({
            textSearchResultSelectIndex: null,
            commonFoodIndex: null,
            foodNumValue: 100,
            chooseUinitIndex: 0,
            recentResultSelectIndex: index,
            unitArr: nameArr,
            foodUnitAndUnitEnergy: arr,
            showPopup: true
        }, function () {
        });
    };
    textSearch.prototype.deleteTextSearchCache = function (event) {
        textCache.clearAll();
        this.getRecentList();
    };
    textSearch.prototype.onClose = function () {
        this.setData({ showPopup: false, showChoosedLists: false });
    };
    textSearch.prototype.toggleChoosedLists = function () {
        this.setData({ showChoosedLists: !this.data.showChoosedLists });
    };
    textSearch.prototype.handleAddFood = function () {
        var _this = this;
        var textSearchResultSelectIndex = this.data.textSearchResultSelectIndex;
        var recentResultSelectIndex = this.data.recentResultSelectIndex;
        var commonFoodIndex = this.data.commonFoodIndex;
        if (recentResultSelectIndex !== null) {
            var item = this.data.recentList[recentResultSelectIndex];
        }
        else if (textSearchResultSelectIndex !== null) {
            var item = this.data.resultList[textSearchResultSelectIndex];
        }
        else {
            var item = this.data.commonFoodList[commonFoodIndex];
        }
        item = __assign({}, item, { choosedUnit: this.data.unitArr[this.data.chooseUinitIndex], weightNumber: this.data.foodNumValue, unitEnergy: this.data.foodUnitAndUnitEnergy[this.data.chooseUinitIndex].unitEnergy, unit_id: this.data.foodUnitAndUnitEnergy[this.data.chooseUinitIndex].unit_id });
        this.data.choosedLists.push(item);
        this.setData({
            choosedLists: this.data.choosedLists,
            showPopup: false
        }, function () {
            _this.sumEnergy();
            if (recentResultSelectIndex !== null) {
                textCache.setValue(_this.data.recentList[recentResultSelectIndex]);
                _this.getRecentList();
            }
            console.log(_this.data.choosedLists);
        });
    };
    textSearch.prototype.sumEnergy = function () {
        var totalEnergy = this.data.choosedLists.reduce(function (pre, next) {
            return next.weightNumber * next.unitEnergy + pre;
        }, 0);
        this.setData({ totalEnergy: totalEnergy });
    };
    textSearch.prototype.handleFoodNumInput = function (e) {
        this.setData({ foodNumValue: parseInt(e.detail.value) });
    };
    textSearch.prototype.showPicker = function () {
        this.setData({ showPicker: true, showPopup: false });
    };
    textSearch.prototype.onConfirm = function () {
        this.setData({ showPicker: false, showPopup: true });
    };
    textSearch.prototype.onChange = function (e) {
        var chooseUinitIndex = e.detail.index;
        if (this.data.unitArr[chooseUinitIndex] === '克') {
            this.setData({ foodNumValueMaxlength: 3 });
        }
        this.setData({ chooseUinitIndex: chooseUinitIndex });
    };
    textSearch.prototype.handleDeleteChoosedItem = function (e) {
        var _this = this;
        var index = e.currentTarget.dataset.index;
        this.data.choosedLists.splice(index, 1);
        this.setData({ choosedLists: this.data.choosedLists }, function () {
            _this.sumEnergy();
            if (_this.data.choosedLists.length === 0) {
                _this.setData({ showChoosedLists: false });
            }
        });
    };
    textSearch.prototype.handleConfirmBtn = function () {
        wx.showLoading({ title: "加载中...", mask: true });
        var foodList = [];
        this.data.choosedLists.map(function (item) {
            var results = [{ food_id: item.foodId, food_name: item.foodName, food_type: item.foodType }];
            var food = {
                food_id: item.foodId,
                food_type: item.foodType,
                recognition_results: results,
                input_type: 2,
                amount: parseInt(item.weightNumber) * 100,
                unit_id: item.unit_id
            };
            foodList.push(food);
        });
        var req = { meal_id: -1, meal_type: this.mealType, meal_date: this.mealDate, food_list: foodList };
        console.log('请求参数req', req);
        this.CreateOrUpdateMealLog(req);
    };
    textSearch.prototype.CreateOrUpdateMealLog = function (req) {
        var _this = this;
        var imageUrl = "https://dietlens-1258665547.cos.ap-shanghai.myqcloud.com/mini-app-image/defaultImage/textsearch-default-image.png";
        webAPI.CreateOrUpdateMealLog(req).then(function (resp) {
            _this.ConfirmMealLog(resp.meal_id);
        }).catch(function (err) {
            wx.showToast({ title: '请求失败', icon: 'none' });
            wx.hideLoading({});
        });
    };
    textSearch.prototype.ConfirmMealLog = function (meal_id) {
        var _this = this;
        var req = { meal_id: meal_id };
        webAPI.ConfirmMealLog(req).then(function (resp) {
            wx.hideLoading({});
            wx.navigateTo({ url: "../../homeSub/pages/mealAnalysis/index?mealDate=" + _this.mealDate + "&mealType=" + _this.mealType });
        }).catch(function (err) {
            wx.showToast({ title: '提交食物记录失败', icon: 'none' });
        });
    };
    return textSearch;
}());
Page(new textSearch());
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsaURBQW1EO0FBQ25ELHFEQUE4QztBQUU5QyxpREFBa0Q7QUFDbEQsaURBQWtEO0FBY2xEO0lBQUE7UUFDUyxlQUFVLEdBQUcsQ0FBQyxDQUFDO1FBQ2YsYUFBUSxHQUFHLENBQUMsQ0FBQztRQUNiLGFBQVEsR0FBRyxDQUFDLENBQUM7UUFDYixhQUFRLEdBQUcsQ0FBQyxDQUFDO1FBRWIsU0FBSSxHQUFHO1lBQ1osT0FBTyxFQUFFLEVBQUU7WUFDWCxXQUFXLEVBQUUsS0FBSztZQUNsQixVQUFVLEVBQUUsRUFBRTtZQUNkLFdBQVcsRUFBRSxFQUFFO1lBQ2YsVUFBVSxFQUFFLEVBQUU7WUFDZCxjQUFjLEVBQUMsRUFBRTtZQUNqQixnQkFBZ0IsRUFBQyxLQUFLO1lBQ3RCLGtCQUFrQixFQUFDLEtBQUs7WUFDeEIsU0FBUyxFQUFFLEtBQUs7WUFDaEIsVUFBVSxFQUFDLEtBQUs7WUFDaEIsWUFBWSxFQUFDLEVBQUU7WUFDZixPQUFPLEVBQUMsQ0FBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsRUFBQyxHQUFHLEVBQUMsR0FBRyxFQUFDLEdBQUcsQ0FBQztZQUNqQyxxQkFBcUIsRUFBQyxFQUFFO1lBQ3hCLFlBQVksRUFBQyxHQUFHO1lBQ2hCLHFCQUFxQixFQUFDLENBQUM7WUFDdkIsZ0JBQWdCLEVBQUMsQ0FBQztZQUNsQiwyQkFBMkIsRUFBQyxJQUFJO1lBQ2hDLHVCQUF1QixFQUFDLElBQUk7WUFDNUIsZUFBZSxFQUFDLElBQUk7WUFDcEIsV0FBVyxFQUFDLENBQUM7U0FDZCxDQUFBO0lBK1pILENBQUM7SUE3WlEsMkJBQU0sR0FBYixVQUFjLE9BQVk7UUFDeEIsTUFBTSxDQUFDLFlBQVksQ0FBQyxFQUFFLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBQyxlQUFlLENBQUMsQ0FBQyxDQUFDO1FBQ25F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Q0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUgsaUJBQUM7QUFBRCxDQUFDLEFBMWJELElBMGJDO0FBRUQsSUFBSSxDQUFDLElBQUksVUFBVSxFQUFFLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIHdlYkFQSSBmcm9tICcuLi8uLi9hcGkvYXBwL0FwcFNlcnZpY2UnO1xuaW1wb3J0IHJlcXVlc3QgZnJvbSAnLi4vLi4vYXBpL2FwcC9pbnRlcmZhY2UnO1xuaW1wb3J0IHsgUmV0cmlldmVUZXh0U2VhcmNoUmVxLCBSZXRyaWV2ZVRleHRTZWFyY2hSZXNwLCBDcmVhdGVPclVwZGF0ZU1lYWxMb2dSZXEsIEFkZFJlY2lwZUl0ZW1SZXEsIE1lYWxMb2dSZXNwIH0gZnJvbSBcIi9hcGkvYXBwL0FwcFNlcnZpY2VPYmpzXCJcbmltcG9ydCAqIGFzIGdsb2JhbEVudW0gZnJvbSAnLi4vLi4vYXBpL0dsb2JhbEVudW0nXG5pbXBvcnQgKiBhcyB0ZXh0Q2FjaGUgZnJvbSAnLi90ZXh0Q2FjaGUvVGV4dENhY2hlJ1xuXG50eXBlIGRhdGEgPSB7XG4gIGtleXdvcmQ6IFN0cmluZztcbiAgcmVzdWx0TGlzdDogUmVzdWx0W107XG59XG5cbnR5cGUgUmVzdWx0ID0ge1xuICBmb29kSWQ6IG51bWJlcjtcbiAgZGlzcGxheU5hbWU6IFN0cmluZztcbiAgZm9vZFR5cGU6IG51bWJlcjtcbiAgZW5ncnk6IG51bWJlcjtcbn1cblxuY2xhc3MgdGV4dFNlYXJjaCB7XG4gIHB1YmxpYyBmaWx0ZXJUeXBlID0gMDsgLy8wLmFsbCAxLnJlY2lwZSAyLmluZ3JlaWRlbnRcbiAgcHVibGljIG1lYWxUeXBlID0gMDsgLy8xLmJyZWFrZmFzdCAyLmx1bmNoIDMuZGlubmVyIDQuc25hY2tcbiAgcHVibGljIG5hdmlUeXBlID0gMDsgLy8wLnRleHRzZWFyY2ggPT4gZGV0YWlsIDEudGV4dHNlYXJjaCA9PiB0YWcgMi50ZXh0c2VhcmNoPT4gaW5ncmVkaWVudFxuICBwdWJsaWMgbWVhbERhdGUgPSAwOyAvL3ByZXYgcGFnZSBtdXN0IHBhc3MgbWVhbERhdGUgdG8gdGV4dFNlYXJjaCBwYWdlXG5cbiAgcHVibGljIGRhdGEgPSB7XG4gICAga2V5d29yZDogXCJcIixcbiAgICBpbnB1dFNob3dlZDogZmFsc2UsXG4gICAgcmVzdWx0TGlzdDogW10sXG4gICAgcmVzdWx0RXJyb3I6IFtdLFxuICAgIHJlY2VudExpc3Q6IFtdLFxuICAgIGNvbW1vbkZvb2RMaXN0OltdLCAvLyDluLjop4Hpo5/nianliJfooahcbiAgICBzaG93Q2hvb3NlZExpc3RzOmZhbHNlLFxuICAgIHNob3dDaG9vc2VkQ29uZmlybTpmYWxzZSxcbiAgICBzaG93UG9wdXA6IGZhbHNlLFxuICAgIHNob3dQaWNrZXI6ZmFsc2UsXG4gICAgY2hvb3NlZExpc3RzOltdLCAgLy8g5bey57uP5re75Yqg55qE6aOf54mp5L+h5oGv5YiX6KGoXG4gICAgdW5pdEFycjpbJ+WFiycsJ+eilycsJ+aKiicsJ+aNpycsJ+ebhicsJ+eToiddLFxuICAgIGZvb2RVbml0QW5kVW5pdEVuZXJneTpbXSxcbiAgICBmb29kTnVtVmFsdWU6MTAwLFxuICAgIGZvb2ROdW1WYWx1ZU1heGxlbmd0aDozLFxuICAgIGNob29zZVVpbml0SW5kZXg6MCwgLy8g55So5oi36YCJ5oup5LqGcGlja2Vy5Lit55qEaW5kZXhcbiAgICB0ZXh0U2VhcmNoUmVzdWx0U2VsZWN0SW5kZXg6bnVsbCwgLy8g55So5oi354K55Ye75paH5a2X5pCc57Si5YiX6KGo5Lit55qE5ZOq5LiA6aG5XG4gICAgcmVjZW50UmVzdWx0U2VsZWN0SW5kZXg6bnVsbCwgLy8g55So5oi354K55Ye75LqG5Y6G5Y+y57yT5a2Y5pWw57uE5Lit55qEaW5kZXhcbiAgICBjb21tb25Gb29kSW5kZXg6bnVsbCwgLy8g5bi46KeB5YiX6KGo5Lit55qEaW5kZXhcbiAgICB0b3RhbEVuZXJneTowLFxuICB9XG5cbiAgcHVibGljIG9uTG9hZChvcHRpb25zOiBhbnkpIHtcbiAgICB3ZWJBUEkuU2V0QXV0aFRva2VuKHd4LmdldFN0b3JhZ2VTeW5jKGdsb2JhbEVudW0uZ2xvYmFsS2V5X3Rva2VuKSk7XG4gICAgbGV0IHRpdGxlID0gb3B0aW9ucy50aXRsZTtcbiAgICB0aGlzLmZpbHRlclR5cGUgPSBwYXJzZUludChvcHRpb25zLmZpbHRlclR5cGUpO1xuICAgIHRoaXMubWVhbFR5cGUgPSBwYXJzZUludChvcHRpb25zLm1lYWxUeXBlKTtcbiAgICB0aGlzLm5hdmlUeXBlID0gcGFyc2VJbnQob3B0aW9ucy5uYXZpVHlwZSk7XG4gICAgdGhpcy5tZWFsRGF0ZSA9IHBhcnNlSW50KG9wdGlvbnMubWVhbERhdGUpO1xuICAgIHd4LnNldE5hdmlnYXRpb25CYXJUaXRsZSh7XG4gICAgICB0aXRsZTogXCLmt7vliqBcIiArIHRpdGxlLy/pobXpnaLmoIfpopjkuLrot6/nlLHlj4LmlbBcbiAgICB9KTtcbiAgICB0aGlzLmdldENvbW1vbkZvb2RMaXN0KCk7XG4gIH1cblxuICBwdWJsaWMgb25TaG93KCkge1xuICAgIHRoaXMuZ2V0UmVjZW50TGlzdCgpO1xuICB9XG4gIC8qKlxuICAgKiDojrflj5bluLjop4HnmoTpo5/nianliJfooahcbiAgICovXG4gIHB1YmxpYyBnZXRDb21tb25Gb29kTGlzdCgpe1xuICAgIGNvbnN0IHRoYXQgPSB0aGlzXG4gICAgcmVxdWVzdC5jb21tb25Gb29kTGlzdCh7XG4gICAgfSkudGhlbihyZXM9PntcbiAgICAgIHRoYXQuc2V0RGF0YSh7Y29tbW9uRm9vZExpc3Q6cmVzfSlcbiAgICB9KS5jYXRjaChlcnI9PntcbiAgICAgIGNvbnNvbGUubG9nKGVycilcbiAgICB9KVxuICB9XG5cbiAgcHVibGljIGdldFJlY2VudExpc3QoKXtcbiAgICBsZXQgcmVjZW50TGlzdCA9IHRleHRDYWNoZS5nZXRBbGxWYWx1ZSgpO1xuICAgICh0aGlzIGFzIGFueSkuc2V0RGF0YSh7XG4gICAgICByZWNlbnRMaXN0OiByZWNlbnRMaXN0XG4gICAgfSk7XG4gIH1cblxuICBwdWJsaWMgc2hvd0lucHV0KCkge1xuICAgICh0aGlzIGFzIGFueSkuc2V0RGF0YSh7XG4gICAgICBpbnB1dFNob3dlZDogdHJ1ZVxuICAgIH0pO1xuICB9XG5cbiAgcHVibGljIGNsZWFySW5wdXQoKSB7XG4gICAgKHRoaXMgYXMgYW55KS5zZXREYXRhKHtcbiAgICAgIGtleXdvcmQ6IFwiXCIsXG4gICAgICByZXN1bHRFcnJvcjogZmFsc2UsXG4gICAgICByZXN1bHRMaXN0OltdXG4gICAgfSk7XG4gIH1cblxuICBwdWJsaWMgaW5wdXRUeXBpbmcoZXZlbnQ6IGFueSkge1xuICAgICh0aGlzIGFzIGFueSkuc2V0RGF0YSh7XG4gICAgICByZXN1bHRFcnJvcjogZmFsc2UsXG4gICAgICBrZXl3b3JkOiBldmVudC5kZXRhaWwudmFsdWUsXG4gICAgfSk7XG4gIH1cblxuICBwdWJsaWMgcGVyZm9ybVNlYXJjaCgpIHtcbiAgICBsZXQga2V5d29yZCA9IHRoaXMuZGF0YS5rZXl3b3JkO1xuICAgIGxldCByZXEgPSB7IHF1ZXJ5OiBrZXl3b3JkLCBmaWx0ZXJfdHlwZTogdGhpcy5maWx0ZXJUeXBlLCBtZWFsX3R5cGU6IHRoaXMubWVhbFR5cGUgfTtcbiAgICB2YXIgdGhhdCA9IHRoaXM7XG4gICAgd3guc2hvd0xvYWRpbmcoe1xuICAgICAgdGl0bGU6J+WKoOi9veS4rS4uLidcbiAgICB9KVxuICAgIHdlYkFQSS5SZXRyaWV2ZVRleHRTZWFyY2gocmVxKS50aGVuKHJlc3AgPT4ge1xuICAgICAgd3guaGlkZUxvYWRpbmcoKVxuICAgICAgdGhhdC5zZXRSZXN1bHRMaXN0KHJlc3ApO1xuICAgIH0pLmNhdGNoKGVyciA9PiBjb25zb2xlLmxvZyhlcnIpKTtcbiAgfVxuXG4gIHB1YmxpYyBzZXRSZXN1bHRMaXN0KHJlc3A6IFJldHJpZXZlVGV4dFNlYXJjaFJlc3ApIHtcbiAgICBsZXQgcmVzdWx0cyA9IFtdO1xuXG4gICAgaWYgKHJlc3AucmVzdWx0X2xpc3QubGVuZ3RoPT0wKSB7XG4gICAgICAodGhpcyBhcyBhbnkpLnNldERhdGEoe1xuICAgICAgICByZXN1bHRMaXN0OiBbXSxcbiAgICAgICAgcmVzdWx0RXJyb3I6IHRydWVcbiAgICAgIH0pXG4gICAgfSBlbHNlIHtcbiAgICAgIGZvciAobGV0IGluZGV4IGluIHJlc3AucmVzdWx0X2xpc3QpIHtcbiAgICAgICAgbGV0IGl0ZW0gPSByZXNwLnJlc3VsdF9saXN0W2luZGV4XTtcbiAgICAgICAgbGV0IHJlc3VsdCA9IHtcbiAgICAgICAgICBmb29kSWQ6IGl0ZW0uZm9vZF9pZCxcbiAgICAgICAgICBmb29kTmFtZTogaXRlbS5mb29kX25hbWUsXG4gICAgICAgICAgZm9vZFR5cGU6IGl0ZW0uZm9vZF90eXBlLFxuICAgICAgICAgIGFtb3VudDogaXRlbS5hbW91bnQsXG4gICAgICAgICAgdW5pdDogaXRlbS51bml0X25hbWUsXG4gICAgICAgICAgZW5lcmd5OiBNYXRoLmZsb29yKGl0ZW0uZW5lcmd5IC8gMTAwKVxuICAgICAgICB9XG4gICAgICAgIHJlc3VsdHMucHVzaChyZXN1bHQpO1xuICAgICAgfVxuICAgICAgKHRoaXMgYXMgYW55KS5zZXREYXRhKHtcbiAgICAgICAgcmVzdWx0TGlzdDogcmVzdWx0cyxcbiAgICAgICAgcmVzdWx0RXJyb3I6IGZhbHNlXG4gICAgICB9KTtcbiAgICB9XG5cblxuICAgIGNvbnNvbGUubG9nKHRoaXMuZGF0YS5yZXN1bHRMaXN0KTtcbiAgfVxuXG4gIC8qKlxuICAgKiB0aHJlZSBjYXNlXG4gICAqIDEuZm9vZERpYXJ5IC0+IHRleHRzZWFyY2ggLT4gZm9vZERldGFpbFBhZ2UocmV0dXJuIGluZ3JlZGllbnQvcmVjZWlwZSlcbiAgICogMi5pbWFnZVRhZyAtPiB0ZXh0c2VhcmNoIC0+IGltYWdlVGFnKHJldHVybiBpbmdyZWRpZW50L3JlY2VpcGUpXG4gICAqIDMuZm9vZERldGFpbCAtPiB0ZXh0c2VhcmNoIC0+IGZvb2REZXRhaWwocmV0dXJuIGluZ3JlZGllbnQpXG4gICAqIGNvbW1vbiBzb2x1dGlvbjogc2V0IHByZXZQYWdlLmRhdGEudGV4dFNlYXJjaEl0ZW1cbiAgICovXG4gIHB1YmxpYyBvblRleHRTZWFyY2hSZXN1bHRTZWxlY3QoZXZlbnQ6IGFueSkge1xuICAgIGxldCBpbmRleCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQuZGF0YXNldC50ZXh0SW5kZXg7XG4gICAgLy8gbGV0IGZvb2RJZCA9IHRoaXMuZGF0YS5yZXN1bHRMaXN0W2luZGV4XS5mb29kSWQ7XG4gICAgLy8gbGV0IGZvb2ROYW1lID0gdGhpcy5kYXRhLnJlc3VsdExpc3RbaW5kZXhdLmZvb2ROYW1lO1xuICAgIC8vIGxldCBmb29kVHlwZSA9IHRoaXMuZGF0YS5yZXN1bHRMaXN0W2luZGV4XS5mb29kVHlwZTtcbiAgICAvLyBsZXQgaW1hZ2VVcmwgPSBcImh0dHBzOi8vZGlldGxlbnMtMTI1ODY2NTU0Ny5jb3MuYXAtc2hhbmdoYWkubXlxY2xvdWQuY29tL21pbmktYXBwLWltYWdlL2RlZmF1bHRJbWFnZS90ZXh0c2VhcmNoLWRlZmF1bHQtaW1hZ2UucG5nXCI7XG4gICAgY29uc3QgdW5pdF9vcHRpb249W1xuICAgICAge1widW5pdF9uYW1lXCI6XCLlhYtcIixcIndlaWdodFwiOjgwMCxcInVuaXRfaWRcIjo3MH0sXG4gICAgICB7XCJ1bml0X25hbWVcIjpcIum4oeibi+Wkp+Wwj1wiLFwid2VpZ2h0XCI6MzYwMDAsXCJ1bml0X2lkXCI6NzR9LFxuICAgICAge1widW5pdF9uYW1lXCI6XCLnopdcIixcIndlaWdodFwiOjIxMDAwLFwidW5pdF9pZFwiOjc0fVxuICAgIF07XG4gICAgY29uc3QgYXJyID0gdW5pdF9vcHRpb24ubWFwKGl0ZW09PntcbiAgICAgIHJldHVybiAoeyBcbiAgICAgICAgJ25hbWUnIDogaXRlbS51bml0X25hbWUsXG4gICAgICAgICd1bml0RW5lcmd5JyA6IGl0ZW0ud2VpZ2h0LzEwMCxcbiAgICAgICAgJ3VuaXRfaWQnIDogaXRlbS51bml0X2lkXG4gICAgICB9KVxuICAgIH0pXG5cbiAgICBjb25zdCBuYW1lQXJyID0gYXJyLm1hcChpdGVtPT5pdGVtLm5hbWUpO1xuICAgICh0aGlzIGFzIGFueSkuc2V0RGF0YSh7XG4gICAgICByZWNlbnRSZXN1bHRTZWxlY3RJbmRleDpudWxsLFxuICAgICAgY29tbW9uRm9vZEluZGV4Om51bGwsXG4gICAgICBmb29kTnVtVmFsdWU6MTAwLCAvLyDliJ3lp4vljJbmlbDph48xMDDlhYtcbiAgICAgIGNob29zZVVpbml0SW5kZXg6MCwgLy8g5Yid5aeL5YyW5pWw6YePMTAw5YWLXG4gICAgICB0ZXh0U2VhcmNoUmVzdWx0U2VsZWN0SW5kZXg6aW5kZXgsXG4gICAgICB1bml0QXJyOm5hbWVBcnIsXG4gICAgICBmb29kVW5pdEFuZFVuaXRFbmVyZ3k6YXJyLFxuICAgICAgc2hvd1BvcHVwOnRydWVcbiAgICB9LCgpPT57XG4gICAgICB0ZXh0Q2FjaGUuc2V0VmFsdWUodGhpcy5kYXRhLnJlc3VsdExpc3RbaW5kZXhdKTtcbiAgICAgIHRoaXMuZ2V0UmVjZW50TGlzdCgpO1xuICAgIH0pXG4gICAgXG4gICAgLy8gaWYgKHRoaXMubmF2aVR5cGUgPT09IDApIHtcbiAgICAvLyAgIHd4LnNob3dMb2FkaW5nKHsgdGl0bGU6IFwi5Yqg6L295LitLi4uXCIsIG1hc2s6IHRydWUgfSk7XG4gICAgLy8gICBsZXQgcmVzdWx0cyA9IFt7IGZvb2RfaWQ6IGZvb2RJZCwgZm9vZF9uYW1lOiBmb29kTmFtZSwgZm9vZF90eXBlOiBmb29kVHlwZSB9XTtcbiAgICAvLyAgIGxldCBmb29kID0geyBmb29kX2lkOiBmb29kSWQsIGlucHV0X3R5cGU6IDIsIGZvb2RfdHlwZTogZm9vZFR5cGUsIHJlY29nbml0aW9uX3Jlc3VsdHM6IHJlc3VsdHMgfTtcbiAgICAvLyAgIGxldCBmb29kTGlzdCA9IFtmb29kXTtcbiAgICAvLyAgIGxldCByZXEgPSB7IG1lYWxfaWQ6IC0xLCBtZWFsX3R5cGU6IHRoaXMubWVhbFR5cGUsIG1lYWxfZGF0ZTogdGhpcy5tZWFsRGF0ZSwgZm9vZF9saXN0OiBmb29kTGlzdCB9O1xuICAgIC8vICAgd2ViQVBJLkNyZWF0ZU9yVXBkYXRlTWVhbExvZyhyZXEpLnRoZW4ocmVzcCA9PiB7XG4gICAgLy8gICAgIHd4LmhpZGVMb2FkaW5nKHt9KTtcbiAgICAvLyAgICAgbGV0IHBhcmFtID0ge307XG4gICAgLy8gICAgIHBhcmFtLm1lYWxJZCA9IHJlc3AubWVhbF9pZDtcbiAgICAvLyAgICAgcGFyYW0uaW1hZ2VVcmwgPSBpbWFnZVVybDtcbiAgICAvLyAgICAgcGFyYW0uc2hvd1NoYXJlQnRuID0gZmFsc2U7XG4gICAgLy8gICAgIGxldCBwYXJhbUpzb24gPSBKU09OLnN0cmluZ2lmeShwYXJhbSk7XG4gICAgLy8gICAgIHd4Lm5hdmlnYXRlVG8oe1xuICAgIC8vICAgICAgIHVybDogXCIvcGFnZXMvZm9vZERldGFpbC9pbmRleD9wYXJhbUpzb249XCIgKyBwYXJhbUpzb25cbiAgICAvLyAgICAgfSk7XG4gICAgLy8gICB9KS5jYXRjaChlcnIgPT4ge1xuICAgIC8vICAgICB3eC5oaWRlTG9hZGluZyh7fSk7XG4gICAgLy8gICAgIH0pO1xuICAgIC8vIH0gZWxzZSB7XG4gICAgLy8gICBsZXQgcGFnZXMgPSBnZXRDdXJyZW50UGFnZXMoKTtcbiAgICAvLyAgIGxldCBwcmV2UGFnZSA9IHBhZ2VzW3BhZ2VzLmxlbmd0aCAtIDJdO1xuICAgIC8vICAgcHJldlBhZ2UudGV4dFNlYXJjaEZvb2QgPSB7IGZvb2RfaWQ6IGZvb2RJZCwgZm9vZF9uYW1lOiBmb29kTmFtZSwgZm9vZF90eXBlOiBmb29kVHlwZSB9XG4gICAgLy8gICB3eC5uYXZpZ2F0ZUJhY2soe1xuICAgIC8vICAgICBkZWx0YTogMVxuICAgIC8vICAgfSlcbiAgICAvLyB9XG5cbiAgICAvLyB0ZXh0Q2FjaGUuc2V0VmFsdWUodGhpcy5kYXRhLnJlc3VsdExpc3RbaW5kZXhdKTtcbiAgfVxuICBwdWJsaWMgaGFuZGxlVGFwQ29tbW9uRm9vZEl0ZW0oZXZlbnQ6IGFueSl7XG4gICAgbGV0IGluZGV4ID0gZXZlbnQuY3VycmVudFRhcmdldC5kYXRhc2V0LnRleHRJbmRleDtcbiAgICBjb25zdCB1bml0X29wdGlvbj1bXG4gICAgICB7XCJ1bml0X25hbWVcIjpcIuWFi1wiLFwid2VpZ2h0XCI6ODAwLFwidW5pdF9pZFwiOjcwfSxcbiAgICAgIHtcInVuaXRfbmFtZVwiOlwi6bih6JuL5aSn5bCPXCIsXCJ3ZWlnaHRcIjozNjAwMCxcInVuaXRfaWRcIjo3NH0sXG4gICAgICB7XCJ1bml0X25hbWVcIjpcIueil1wiLFwid2VpZ2h0XCI6MjEwMDAsXCJ1bml0X2lkXCI6NzR9XG4gICAgXTtcbiAgICBjb25zdCBhcnIgPSB1bml0X29wdGlvbi5tYXAoaXRlbT0+e1xuICAgICAgcmV0dXJuICh7IFxuICAgICAgICAnbmFtZScgOiBpdGVtLnVuaXRfbmFtZSxcbiAgICAgICAgJ3VuaXRFbmVyZ3knIDogaXRlbS53ZWlnaHQvMTAwLFxuICAgICAgICAndW5pdF9pZCcgOiBpdGVtLnVuaXRfaWRcbiAgICAgIH0pXG4gICAgfSlcblxuICAgIGNvbnN0IG5hbWVBcnIgPSBhcnIubWFwKGl0ZW09Pml0ZW0ubmFtZSk7XG4gICAgKHRoaXMgYXMgYW55KS5zZXREYXRhKHtcbiAgICAgIHRleHRTZWFyY2hSZXN1bHRTZWxlY3RJbmRleDpudWxsLFxuICAgICAgcmVjZW50UmVzdWx0U2VsZWN0SW5kZXg6bnVsbCxcbiAgICAgIGZvb2ROdW1WYWx1ZToxMDAsIC8vIOWIneWni+WMluaVsOmHjzEwMOWFi1xuICAgICAgY2hvb3NlVWluaXRJbmRleDowLCAvLyDliJ3lp4vljJbmlbDph48xMDDlhYtcbiAgICAgIGNvbW1vbkZvb2RJbmRleDppbmRleCxcbiAgICAgIHVuaXRBcnI6bmFtZUFycixcbiAgICAgIGZvb2RVbml0QW5kVW5pdEVuZXJneTphcnIsXG4gICAgICBzaG93UG9wdXA6dHJ1ZVxuICAgIH0pXG4gICAgdGV4dENhY2hlLnNldFZhbHVlKHRoaXMuZGF0YS5jb21tb25Gb29kTGlzdFtpbmRleF0pO1xuICB9XG5cbiAgcHVibGljIG9uUmVjZW50UmVzdWx0U2VsZWN0KGV2ZW50OiBhbnkpe1xuICAgIGxldCBpbmRleCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQuZGF0YXNldC50ZXh0SW5kZXg7XG4gICAgLy8gbGV0IGZvb2RJZCA9IHRoaXMuZGF0YS5yZWNlbnRMaXN0W2luZGV4XS5mb29kSWQ7XG4gICAgLy8gbGV0IGZvb2ROYW1lID0gdGhpcy5kYXRhLnJlY2VudExpc3RbaW5kZXhdLmZvb2ROYW1lO1xuICAgIC8vIGxldCBmb29kVHlwZSA9IHRoaXMuZGF0YS5yZWNlbnRMaXN0W2luZGV4XS5mb29kVHlwZTtcbiAgICAvLyBsZXQgaW1hZ2VVcmwgPSBcImh0dHBzOi8vZGlldGxlbnMtMTI1ODY2NTU0Ny5jb3MuYXAtc2hhbmdoYWkubXlxY2xvdWQuY29tL21pbmktYXBwLWltYWdlL2RlZmF1bHRJbWFnZS90ZXh0c2VhcmNoLWRlZmF1bHQtaW1hZ2UucG5nXCI7XG4gICAgY29uc3QgdW5pdF9vcHRpb249W1xuICAgICAge1widW5pdF9uYW1lXCI6XCLlhYtcIixcIndlaWdodFwiOjgwMCxcInVuaXRfaWRcIjo3MH0sXG4gICAgICB7XCJ1bml0X25hbWVcIjpcIum4oeibi+Wkp+Wwj1wiLFwid2VpZ2h0XCI6MzYwMDAsXCJ1bml0X2lkXCI6NzR9LFxuICAgICAge1widW5pdF9uYW1lXCI6XCLnopdcIixcIndlaWdodFwiOjIxMDAwLFwidW5pdF9pZFwiOjc0fVxuICAgIF07XG4gICAgY29uc3QgYXJyID0gdW5pdF9vcHRpb24ubWFwKGl0ZW09PntcbiAgICAgIHJldHVybiAoeyBcbiAgICAgICAgJ25hbWUnIDogaXRlbS51bml0X25hbWUsXG4gICAgICAgICd1bml0RW5lcmd5JyA6IGl0ZW0ud2VpZ2h0LzEwMCxcbiAgICAgICAgJ3VuaXRfaWQnIDogaXRlbS51bml0X2lkXG4gICAgICB9KVxuICAgIH0pXG5cbiAgICBjb25zdCBuYW1lQXJyID0gYXJyLm1hcChpdGVtPT5pdGVtLm5hbWUpO1xuICAgICh0aGlzIGFzIGFueSkuc2V0RGF0YSh7XG4gICAgICB0ZXh0U2VhcmNoUmVzdWx0U2VsZWN0SW5kZXg6bnVsbCxcbiAgICAgIGNvbW1vbkZvb2RJbmRleDpudWxsLFxuICAgICAgZm9vZE51bVZhbHVlOjEwMCwgLy8g5Yid5aeL5YyW5pWw6YePMTAw5YWLXG4gICAgICBjaG9vc2VVaW5pdEluZGV4OjAsIC8vIOWIneWni+WMluaVsOmHjzEwMOWFi1xuICAgICAgcmVjZW50UmVzdWx0U2VsZWN0SW5kZXg6aW5kZXgsXG4gICAgICB1bml0QXJyOm5hbWVBcnIsXG4gICAgICBmb29kVW5pdEFuZFVuaXRFbmVyZ3k6YXJyLFxuICAgICAgc2hvd1BvcHVwOnRydWVcbiAgICB9LCgpPT57XG4gICAgICBcbiAgICB9KVxuICAgIC8vIHRleHRDYWNoZS5zZXRWYWx1ZSh0aGlzLmRhdGEucmVjZW50TGlzdFtpbmRleF0pO1xuXG4gICAgLy8gaWYgKHRoaXMubmF2aVR5cGUgPT09IDApIHtcbiAgICAvLyAgIHd4LnNob3dMb2FkaW5nKHsgdGl0bGU6IFwi5Yqg6L295LitLi4uXCIsIG1hc2s6IHRydWUgfSk7XG4gICAgLy8gICBsZXQgcmVzdWx0cyA9IFt7IGZvb2RfaWQ6IGZvb2RJZCwgZm9vZF9uYW1lOiBmb29kTmFtZSwgZm9vZF90eXBlOiBmb29kVHlwZSB9XTtcbiAgICAvLyAgIGxldCBmb29kID0geyBmb29kX2lkOiBmb29kSWQsIGlucHV0X3R5cGU6IDIsIGZvb2RfdHlwZTogZm9vZFR5cGUsIHJlY29nbml0aW9uX3Jlc3VsdHM6IHJlc3VsdHMgfTtcbiAgICAvLyAgIGxldCBmb29kTGlzdCA9IFtmb29kXTtcbiAgICAvLyAgIGxldCByZXEgPSB7IG1lYWxfaWQ6IC0xLCBtZWFsX3R5cGU6IHRoaXMubWVhbFR5cGUsIG1lYWxfZGF0ZTogdGhpcy5tZWFsRGF0ZSwgZm9vZF9saXN0OiBmb29kTGlzdCB9O1xuICAgIC8vICAgd2ViQVBJLkNyZWF0ZU9yVXBkYXRlTWVhbExvZyhyZXEpLnRoZW4ocmVzcCA9PiB7XG4gICAgLy8gICAgIHd4LmhpZGVMb2FkaW5nKHt9KTtcbiAgICAvLyAgICAgbGV0IHBhcmFtID0ge307XG4gICAgLy8gICAgIHBhcmFtLm1lYWxJZCA9IHJlc3AubWVhbF9pZDtcbiAgICAvLyAgICAgcGFyYW0uaW1hZ2VVcmwgPSBpbWFnZVVybDtcbiAgICAvLyAgICAgcGFyYW0uc2hvd1NoYXJlQnRuID0gZmFsc2U7XG4gICAgLy8gICAgIGxldCBwYXJhbUpzb24gPSBKU09OLnN0cmluZ2lmeShwYXJhbSk7XG4gICAgLy8gICAgIHd4Lm5hdmlnYXRlVG8oe1xuICAgIC8vICAgICAgIHVybDogXCIvcGFnZXMvZm9vZERldGFpbC9pbmRleD9wYXJhbUpzb249XCIgKyBwYXJhbUpzb25cbiAgICAvLyAgICAgfSk7XG4gICAgLy8gICB9KS5jYXRjaChlcnIgPT4ge1xuICAgIC8vICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgIC8vICAgICB3eC5oaWRlTG9hZGluZyh7fSk7XG4gICAgLy8gICB9KTtcbiAgICAvLyB9IGVsc2Uge1xuICAgIC8vICAgbGV0IHBhZ2VzID0gZ2V0Q3VycmVudFBhZ2VzKCk7XG4gICAgLy8gICBsZXQgcHJldlBhZ2UgPSBwYWdlc1twYWdlcy5sZW5ndGggLSAyXTtcbiAgICAvLyAgIHByZXZQYWdlLnRleHRTZWFyY2hGb29kID0geyBmb29kX2lkOiBmb29kSWQsIGZvb2RfbmFtZTogZm9vZE5hbWUsIGZvb2RfdHlwZTogZm9vZFR5cGUgfVxuICAgIC8vICAgd3gubmF2aWdhdGVCYWNrKHtcbiAgICAvLyAgICAgZGVsdGE6IDFcbiAgICAvLyAgIH0pXG4gICAgLy8gfVxuICAgXG4gIH1cblxuICBwdWJsaWMgZGVsZXRlVGV4dFNlYXJjaENhY2hlKGV2ZW50OiBhbnkpe1xuICAgIHRleHRDYWNoZS5jbGVhckFsbCgpO1xuICAgIHRoaXMuZ2V0UmVjZW50TGlzdCgpO1xuICB9XG4gIC8qKlxuICAgKiDlhbPpl63lvLnnqpdwb3B1cOahhlxuICAgKi9cbiAgcHVibGljIG9uQ2xvc2UoKXtcbiAgICAodGhpcyBhcyBhbnkpLnNldERhdGEoeyBzaG93UG9wdXA6IGZhbHNlLHNob3dDaG9vc2VkTGlzdHM6ZmFsc2V9KTtcbiAgfVxuLyoqXG4gKiDliIfmjaLlt7LpgInpo5/nianliJfooajnmoTmmL7npLrkuI7pmpDol49cbiAqL1xuICBwdWJsaWMgdG9nZ2xlQ2hvb3NlZExpc3RzKCl7XG4gICAgKHRoaXMgYXMgYW55KS5zZXREYXRhKHtzaG93Q2hvb3NlZExpc3RzOiF0aGlzLmRhdGEuc2hvd0Nob29zZWRMaXN0c30pXG4gIH1cbiAgLyoqXG4gICAqIOeCueWHu+a3u+WKoOaMiemSru+8jOWwhumjn+eJqea3u+WKoOiHs+W3sumAiVxuICAgKi9cbiAgcHVibGljIGhhbmRsZUFkZEZvb2QoKXtcbiAgICBsZXQgdGV4dFNlYXJjaFJlc3VsdFNlbGVjdEluZGV4ID0gdGhpcy5kYXRhLnRleHRTZWFyY2hSZXN1bHRTZWxlY3RJbmRleDtcbiAgICBsZXQgcmVjZW50UmVzdWx0U2VsZWN0SW5kZXggPSB0aGlzLmRhdGEucmVjZW50UmVzdWx0U2VsZWN0SW5kZXg7XG4gICAgbGV0IGNvbW1vbkZvb2RJbmRleCA9IHRoaXMuZGF0YS5jb21tb25Gb29kSW5kZXg7XG4gICAgaWYocmVjZW50UmVzdWx0U2VsZWN0SW5kZXggIT09IG51bGwgKXtcbiAgICAgIGxldCBpdGVtOmFueSA9IHRoaXMuZGF0YS5yZWNlbnRMaXN0W3JlY2VudFJlc3VsdFNlbGVjdEluZGV4XTtcbiAgICB9ZWxzZSBpZih0ZXh0U2VhcmNoUmVzdWx0U2VsZWN0SW5kZXggIT09IG51bGwpe1xuICAgICAgbGV0IGl0ZW06YW55ID0gdGhpcy5kYXRhLnJlc3VsdExpc3RbdGV4dFNlYXJjaFJlc3VsdFNlbGVjdEluZGV4XTtcbiAgICB9ZWxzZXtcbiAgICAgIGxldCBpdGVtOmFueSA9IHRoaXMuZGF0YS5jb21tb25Gb29kTGlzdFtjb21tb25Gb29kSW5kZXhdO1xuICAgIH1cbiAgICBpdGVtID0ge1xuICAgICAgLi4uaXRlbSxcbiAgICAgIGNob29zZWRVbml0OnRoaXMuZGF0YS51bml0QXJyW3RoaXMuZGF0YS5jaG9vc2VVaW5pdEluZGV4XSxcbiAgICAgIHdlaWdodE51bWJlcjp0aGlzLmRhdGEuZm9vZE51bVZhbHVlLFxuICAgICAgdW5pdEVuZXJneTp0aGlzLmRhdGEuZm9vZFVuaXRBbmRVbml0RW5lcmd5W3RoaXMuZGF0YS5jaG9vc2VVaW5pdEluZGV4XS51bml0RW5lcmd5LFxuICAgICAgdW5pdF9pZDp0aGlzLmRhdGEuZm9vZFVuaXRBbmRVbml0RW5lcmd5W3RoaXMuZGF0YS5jaG9vc2VVaW5pdEluZGV4XS51bml0X2lkXG4gICAgfTtcbiAgICB0aGlzLmRhdGEuY2hvb3NlZExpc3RzLnB1c2goaXRlbSk7XG4gICAgKHRoaXMgYXMgYW55KS5zZXREYXRhKHsgXG4gICAgICBjaG9vc2VkTGlzdHMgOiB0aGlzLmRhdGEuY2hvb3NlZExpc3RzLFxuICAgICAgc2hvd1BvcHVwIDogZmFsc2VcbiAgICB9LCgpPT57XG4gICAgICB0aGlzLnN1bUVuZXJneSgpO1xuICAgICAgaWYocmVjZW50UmVzdWx0U2VsZWN0SW5kZXggIT09IG51bGwpeyAvLyDkuLrljoblj7LmkJzntKLph43mlrDmjpLluo9cbiAgICAgICAgdGV4dENhY2hlLnNldFZhbHVlKHRoaXMuZGF0YS5yZWNlbnRMaXN0W3JlY2VudFJlc3VsdFNlbGVjdEluZGV4XSlcbiAgICAgICAgdGhpcy5nZXRSZWNlbnRMaXN0KCk7XG4gICAgICB9XG4gICAgICBjb25zb2xlLmxvZyh0aGlzLmRhdGEuY2hvb3NlZExpc3RzKSAgIFxuICAgIH0pXG4gIH1cbiAgLyoqXG4gICAqIEBwYXJhbSDorqHnrpfnlKjmiLfpo5/niankuIDlhbHmnInlpJrlsJHng63ph49cbiAgICovXG4gIHB1YmxpYyBzdW1FbmVyZ3koKXtcbiAgICBjb25zdCB0b3RhbEVuZXJneSA9IHRoaXMuZGF0YS5jaG9vc2VkTGlzdHMucmVkdWNlKChwcmUsbmV4dCk9PntcbiAgICAgIHJldHVybiBuZXh0LndlaWdodE51bWJlcipuZXh0LnVuaXRFbmVyZ3krcHJlXG4gICAgfSwwKTtcbiAgICAodGhpcyBhcyBhbnkpLnNldERhdGEoe3RvdGFsRW5lcmd5OnRvdGFsRW5lcmd5fSlcbiAgfVxuXG4gIC8qKlxuICAgKiDnlKjmiLfovpPlhaXpo5/niannmoTku73mlbBcbiAgICovXG4gIHB1YmxpYyBoYW5kbGVGb29kTnVtSW5wdXQoZTphbnkpe1xuICAgICh0aGlzIGFzIGFueSkuc2V0RGF0YSh7Zm9vZE51bVZhbHVlOnBhcnNlSW50KGUuZGV0YWlsLnZhbHVlKX0pXG4gIH1cbiAgLyoqXG4gICAqIOWxleekunBpY2tlcu+8jOmAieaLqemjn+eJqeWNleS9jVxuICAgKi9cbiAgcHVibGljIHNob3dQaWNrZXIoKXtcbiAgICAodGhpcyBhcyBhbnkpLnNldERhdGEoe3Nob3dQaWNrZXI6dHJ1ZSxzaG93UG9wdXA6ZmFsc2V9KVxuICB9XG4gIHB1YmxpYyBvbkNvbmZpcm0oKXtcbiAgICAodGhpcyBhcyBhbnkpLnNldERhdGEoe3Nob3dQaWNrZXI6ZmFsc2Usc2hvd1BvcHVwOnRydWV9KVxuICB9XG4gIHB1YmxpYyBvbkNoYW5nZShlOmFueSl7XG4gICAgbGV0IGNob29zZVVpbml0SW5kZXg6bnVtYmVyID0gZS5kZXRhaWwuaW5kZXg7XG4gICAgaWYodGhpcy5kYXRhLnVuaXRBcnJbY2hvb3NlVWluaXRJbmRleF09PT0n5YWLJyl7XG4gICAgICAodGhpcyBhcyBhbnkpLnNldERhdGEoe2Zvb2ROdW1WYWx1ZU1heGxlbmd0aDozfSlcbiAgICB9XG4gICAgKHRoaXMgYXMgYW55KS5zZXREYXRhKHtjaG9vc2VVaW5pdEluZGV4OmNob29zZVVpbml0SW5kZXh9KVxuICB9XG4gIC8qKlxuICAgKiDliKDpmaTpgInkuK3liJfooajkuK3nmoTmn5DkuIDpoblcbiAgICovXG4gIHB1YmxpYyBoYW5kbGVEZWxldGVDaG9vc2VkSXRlbShlOmFueSl7XG4gICAgbGV0IGluZGV4ID0gZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQuaW5kZXg7XG4gICAgdGhpcy5kYXRhLmNob29zZWRMaXN0cy5zcGxpY2UoaW5kZXgsMSk7XG4gICAgKHRoaXMgYXMgYW55KS5zZXREYXRhKHtjaG9vc2VkTGlzdHM6dGhpcy5kYXRhLmNob29zZWRMaXN0c30sKCk9PntcbiAgICAgIHRoaXMuc3VtRW5lcmd5KClcbiAgICAgIGlmKHRoaXMuZGF0YS5jaG9vc2VkTGlzdHMubGVuZ3RoPT09MCl7XG4gICAgICAgICh0aGlzIGFzIGFueSkuc2V0RGF0YSh7c2hvd0Nob29zZWRMaXN0czpmYWxzZX0pXG4gICAgICB9XG4gICAgfSlcbiAgfVxuICAvKipcbiAgICog5om56YeP5re75Yqg6aOf54mp5pW05ZCI5Y+C5pWwXG4gICAqL1xuICBwdWJsaWMgaGFuZGxlQ29uZmlybUJ0bigpe1xuICAgIHd4LnNob3dMb2FkaW5nKHsgdGl0bGU6IFwi5Yqg6L295LitLi4uXCIsIG1hc2s6IHRydWUgfSk7XG4gICAgbGV0IGZvb2RMaXN0OmFueVtdID0gW107XG4gICAgdGhpcy5kYXRhLmNob29zZWRMaXN0cy5tYXAoKGl0ZW06YW55KSA9PiB7XG4gICAgICBsZXQgcmVzdWx0cyA9IFt7IGZvb2RfaWQ6IGl0ZW0uZm9vZElkLCBmb29kX25hbWU6IGl0ZW0uZm9vZE5hbWUsIGZvb2RfdHlwZTogaXRlbS5mb29kVHlwZSB9XTtcbiAgICAgIGxldCBmb29kID0geyBcbiAgICAgICAgZm9vZF9pZDogaXRlbS5mb29kSWQsIFxuICAgICAgICBmb29kX3R5cGU6IGl0ZW0uZm9vZFR5cGUsIFxuICAgICAgICByZWNvZ25pdGlvbl9yZXN1bHRzOiByZXN1bHRzLFxuICAgICAgICBpbnB1dF90eXBlOiAyLCBcbiAgICAgICAgYW1vdW50OnBhcnNlSW50KGl0ZW0ud2VpZ2h0TnVtYmVyKSoxMDAsXG4gICAgICAgIHVuaXRfaWQ6IGl0ZW0udW5pdF9pZFxuICAgICAgfTtcbiAgICAgIGZvb2RMaXN0LnB1c2goZm9vZClcbiAgICB9KVxuICAgIGxldCByZXEgPSB7IG1lYWxfaWQ6IC0xLCBtZWFsX3R5cGU6IHRoaXMubWVhbFR5cGUsIG1lYWxfZGF0ZTogdGhpcy5tZWFsRGF0ZSwgZm9vZF9saXN0OiBmb29kTGlzdCB9O1xuICAgIGNvbnNvbGUubG9nKCfor7fmsYLlj4LmlbByZXEnLHJlcSlcbiAgICB0aGlzLkNyZWF0ZU9yVXBkYXRlTWVhbExvZyhyZXEpO1xuICB9XG4gIC8qKlxuICAgKiDmoLzlvI/ljJbmlbDmja7lkI7vvIzlj5Hlh7ror7fmsYLvvIzojrflvpdtZWFsX2lkXG4gICAqL1xuICBwdWJsaWMgQ3JlYXRlT3JVcGRhdGVNZWFsTG9nKHJlcTphbnkpe1xuICAgIGxldCBpbWFnZVVybCA9IFwiaHR0cHM6Ly9kaWV0bGVucy0xMjU4NjY1NTQ3LmNvcy5hcC1zaGFuZ2hhaS5teXFjbG91ZC5jb20vbWluaS1hcHAtaW1hZ2UvZGVmYXVsdEltYWdlL3RleHRzZWFyY2gtZGVmYXVsdC1pbWFnZS5wbmdcIjtcbiAgICB3ZWJBUEkuQ3JlYXRlT3JVcGRhdGVNZWFsTG9nKHJlcSkudGhlbihyZXNwID0+IHtcbiAgICAgIC8vIGxldCBwYXJhbTphbnkgPSB7fTtcbiAgICAgIC8vIHBhcmFtLm1lYWxJZCA9IHJlc3AubWVhbF9pZDtcbiAgICAgIC8vIHBhcmFtLmltYWdlVXJsID0gaW1hZ2VVcmw7XG4gICAgICAvLyBwYXJhbS5zaG93U2hhcmVCdG4gPSBmYWxzZTtcbiAgICAgIC8vIGxldCBwYXJhbUpzb24gPSBKU09OLnN0cmluZ2lmeShwYXJhbSk7XG4gICAgICB0aGlzLkNvbmZpcm1NZWFsTG9nKHJlc3AubWVhbF9pZClcbiAgICB9KS5jYXRjaChlcnIgPT4ge1xuICAgICAgd3guc2hvd1RvYXN0KHt0aXRsZTogJ+ivt+axguWksei0pScsaWNvbjogJ25vbmUnfSk7XG4gICAgICB3eC5oaWRlTG9hZGluZyh7fSk7XG4gICAgfSk7XG4gIH1cbiAgLyoqXG4gICAqIOWPkeWHuuivt+axgu+8jOWIm+W7uuiusOW9lVxuICAgKi9cbiAgcHVibGljIENvbmZpcm1NZWFsTG9nKG1lYWxfaWQ6bnVtYmVyKXtcbiAgICBsZXQgcmVxID0geyBtZWFsX2lkOiBtZWFsX2lkIH07XG4gICAgd2ViQVBJLkNvbmZpcm1NZWFsTG9nKHJlcSkudGhlbihyZXNwID0+IHtcbiAgICAgIHd4LmhpZGVMb2FkaW5nKHt9KTtcbiAgICAgIHd4Lm5hdmlnYXRlVG8oeyB1cmw6IGAuLi8uLi9ob21lU3ViL3BhZ2VzL21lYWxBbmFseXNpcy9pbmRleD9tZWFsRGF0ZT0ke3RoaXMubWVhbERhdGV9Jm1lYWxUeXBlPSR7dGhpcy5tZWFsVHlwZX1gfSlcbiAgICB9KS5jYXRjaChlcnIgPT4ge1xuICAgICAgd3guc2hvd1RvYXN0KHt0aXRsZTogJ+aPkOS6pOmjn+eJqeiusOW9leWksei0pScsaWNvbjogJ25vbmUnfSk7XG4gICAgfSk7XG4gIH1cblxufVxuXG5QYWdlKG5ldyB0ZXh0U2VhcmNoKCkpXG4iXX0=