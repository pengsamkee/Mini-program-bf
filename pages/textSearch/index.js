"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var webAPI = require("../../api/app/AppService");
var interface_1 = require("../../api/app/interface");
var globalEnum = require("../../api/GlobalEnum");
var textCache = require("./textCache/TextCache");
var list_js_1 = require("./list.js");
var moment = require("moment");
var textSearch = (function () {
    function textSearch() {
        this.filterType = 0;
        this.mealType = 0;
        this.naviType = 0;
        this.mealDate = 0;
        this.data = {
            keyword: "",
            inputShowed: false,
            resultList: [],
            resultError: [],
            recentList: [],
            commonFoodList: [],
            showChoosedLists: false,
            showChoosedConfirm: false,
            showPopup: false,
            showPicker: false,
            choosedLists: [],
            unitArr: ['克', '碗', '把', '捧', '盆', '瓢'],
            foodUnitAndUnitEnergy: [],
            foodNumValue: 100,
            chooseUinitIndex: 0,
            textSearchResultSelectIndex: null,
            recentResultSelectIndex: null,
            commonFoodIndex: null,
            totalEnergy: 0,
        };
    }
    textSearch.prototype.onLoad = function (options) {
        webAPI.SetAuthToken(wx.getStorageSync(globalEnum.globalKey_token));
        var title = options.title;
        this.filterType = parseInt(options.filterType);
        this.mealType = parseInt(options.mealType);
        this.naviType = parseInt(options.naviType);
        this.mealDate = parseInt(options.mealDate);
        wx.setNavigationBarTitle({
            title: "添加" + title
        });
        this.getCommonFoodList();
    };
    textSearch.prototype.onShow = function () {
        this.getRecentList();
    };
    textSearch.prototype.getCommonFoodList = function () {
        var hour = parseInt(moment().format('HH'));
        if (hour >= 16) {
            this.setData({ commonFoodList: list_js_1.default.c });
            return;
        }
        else if (hour >= 10) {
            this.setData({ commonFoodList: list_js_1.default.b });
            return;
        }
        else {
            this.setData({ commonFoodList: list_js_1.default.a });
        }
    };
    textSearch.prototype.getFoodUnitOption = function (item) {
        var that = this;
        interface_1.default.getFoodUnitOption({
            foodId: item.foodId,
            foodType: item.foodType
        }).then(function (res) {
            console.log('getFoodUnitOption', res);
            that.parseFoodUnitOptionResp(res);
        }).catch(function (err) {
            wx.showToast({
                title: '获取食物信息失败',
                icon: 'none'
            });
        });
    };
    textSearch.prototype.parseFoodUnitOptionResp = function (res) {
        var arr = res.unitOption.map(function (item) {
            return {
                name: item.unitName,
                unitEnergy: Math.round(item.energy),
                unit_id: item.unitId
            };
        });
        var nameArr = arr.map(function (item) { return item.name; });
        this.setData({
            foodNumValue: res.unitOption[0].unitWeight / 100,
            chooseUinitIndex: 0,
            unitArr: nameArr,
            foodUnitAndUnitEnergy: arr,
            showPopup: true
        });
    };
    textSearch.prototype.getRecentList = function () {
        var recentList = textCache.getAllValue();
        this.setData({
            recentList: recentList
        });
    };
    textSearch.prototype.showInput = function () {
        this.setData({
            inputShowed: true
        });
    };
    textSearch.prototype.clearInput = function () {
        this.setData({
            keyword: "",
            resultError: false,
            resultList: []
        });
    };
    textSearch.prototype.inputTyping = function (event) {
        this.setData({
            resultError: false,
            keyword: event.detail.value,
        });
    };
    textSearch.prototype.performSearch = function () {
        var keyword = this.data.keyword;
        var req = { query: keyword, filter_type: this.filterType, meal_type: this.mealType };
        var that = this;
        wx.showLoading({
            title: '加载中...'
        });
        webAPI.RetrieveTextSearch(req).then(function (resp) {
            wx.hideLoading();
            that.setResultList(resp);
        }).catch(function (err) { return console.log(err); });
    };
    textSearch.prototype.setResultList = function (resp) {
        var results = [];
        if (resp.result_list.length == 0) {
            this.setData({
                resultList: [],
                resultError: true
            });
        }
        else {
            for (var index in resp.result_list) {
                var item = resp.result_list[index];
                var result = {
                    foodId: item.food_id,
                    foodName: item.food_name,
                    foodType: item.food_type,
                    amount: item.amount,
                    unit: item.unit_name,
                    energy: Math.floor(item.energy / 100)
                };
                results.push(result);
            }
            this.setData({
                resultList: results,
                resultError: false
            });
        }
        console.log(this.data.resultList);
    };
    textSearch.prototype.onTextSearchResultSelect = function (event) {
        var _this = this;
        var index = event.currentTarget.dataset.textIndex;
        this.getFoodUnitOption(this.data.resultList[index]);
        this.setData({
            recentResultSelectIndex: null,
            commonFoodIndex: null,
            textSearchResultSelectIndex: index,
        }, function () {
            textCache.setValue(_this.data.resultList[index]);
            _this.getRecentList();
        });
    };
    textSearch.prototype.handleTapCommonFoodItem = function (event) {
        var index = event.currentTarget.dataset.textIndex;
        this.getFoodUnitOption(this.data.commonFoodList[index]);
        this.setData({
            textSearchResultSelectIndex: null,
            recentResultSelectIndex: null,
            commonFoodIndex: index,
        });
    };
    textSearch.prototype.onRecentResultSelect = function (event) {
        var index = event.currentTarget.dataset.textIndex;
        this.getFoodUnitOption(this.data.recentList[index]);
        this.setData({
            textSearchResultSelectIndex: null,
            commonFoodIndex: null,
            recentResultSelectIndex: index,
        });
    };
    textSearch.prototype.deleteTextSearchCache = function (event) {
        textCache.clearAll();
        this.getRecentList();
    };
    textSearch.prototype.onClose = function () {
        this.setData({ showPopup: false, showChoosedLists: false });
    };
    textSearch.prototype.toggleChoosedLists = function () {
        this.setData({ showChoosedLists: !this.data.showChoosedLists });
    };
    textSearch.prototype.handleAddFood = function () {
        var _this = this;
        var textSearchResultSelectIndex = this.data.textSearchResultSelectIndex;
        var recentResultSelectIndex = this.data.recentResultSelectIndex;
        var commonFoodIndex = this.data.commonFoodIndex;
        if (recentResultSelectIndex !== null) {
            var item = this.data.recentList[recentResultSelectIndex];
        }
        else if (textSearchResultSelectIndex !== null) {
            var item = this.data.resultList[textSearchResultSelectIndex];
        }
        else {
            var item = this.data.commonFoodList[commonFoodIndex];
        }
        item = __assign({}, item, { choosedUnit: this.data.unitArr[this.data.chooseUinitIndex], weightNumber: this.data.foodNumValue, unitEnergy: this.data.foodUnitAndUnitEnergy[this.data.chooseUinitIndex].unitEnergy, unit_id: this.data.foodUnitAndUnitEnergy[this.data.chooseUinitIndex].unit_id });
        this.data.choosedLists.push(item);
        this.setData({
            choosedLists: this.data.choosedLists,
            showPopup: false
        }, function () {
            _this.sumEnergy();
            if (recentResultSelectIndex !== null) {
                textCache.setValue(_this.data.recentList[recentResultSelectIndex]);
                _this.getRecentList();
            }
            console.log(_this.data.choosedLists);
        });
    };
    textSearch.prototype.sumEnergy = function () {
        var totalEnergy = this.data.choosedLists.reduce(function (pre, next) {
            return next.weightNumber * next.unitEnergy + pre;
        }, 0);
        this.setData({ totalEnergy: totalEnergy });
    };
    textSearch.prototype.handleFoodNumInput = function (e) {
        var foodNumValue = parseInt(e.detail.value);
        this.setData({ foodNumValue: foodNumValue });
    };
    textSearch.prototype.showPicker = function () {
        this.setData({ showPicker: true, showPopup: false });
    };
    textSearch.prototype.onConfirm = function () {
        this.setData({ showPicker: false, showPopup: true });
    };
    textSearch.prototype.onChange = function (e) {
        var chooseUinitIndex = e.detail.index;
        this.setData({ chooseUinitIndex: chooseUinitIndex });
    };
    textSearch.prototype.handleDeleteChoosedItem = function (e) {
        var _this = this;
        var index = e.currentTarget.dataset.index;
        this.data.choosedLists.splice(index, 1);
        this.setData({ choosedLists: this.data.choosedLists }, function () {
            _this.sumEnergy();
            if (_this.data.choosedLists.length === 0) {
                _this.setData({ showChoosedLists: false });
            }
        });
    };
    textSearch.prototype.handleConfirmBtn = function () {
        wx.showLoading({ title: "加载中...", mask: true });
        var foodList = [];
        this.data.choosedLists.map(function (item) {
            var results = [{ food_id: item.foodId, food_name: item.foodName, food_type: item.foodType }];
            var food = {
                food_id: item.foodId,
                food_type: item.foodType,
                recognition_results: results,
                input_type: 2,
                amount: parseInt(item.weightNumber) * 100,
                unit_id: item.unit_id
            };
            foodList.push(food);
        });
        var req = { meal_id: -1, meal_type: this.mealType, meal_date: this.mealDate, food_list: foodList };
        console.log('请求参数req', req);
        this.CreateOrUpdateMealLog(req);
    };
    textSearch.prototype.CreateOrUpdateMealLog = function (req) {
        var _this = this;
        var imageUrl = "https://dietlens-1258665547.cos.ap-shanghai.myqcloud.com/mini-app-image/defaultImage/textsearch-default-image.png";
        webAPI.CreateOrUpdateMealLog(req).then(function (resp) {
            _this.ConfirmMealLog(resp.meal_id);
        }).catch(function (err) {
            wx.showToast({ title: '请求失败', icon: 'none' });
            wx.hideLoading({});
        });
    };
    textSearch.prototype.ConfirmMealLog = function (meal_id) {
        var _this = this;
        var req = { meal_id: meal_id };
        webAPI.ConfirmMealLog(req).then(function (resp) {
            wx.hideLoading({});
            wx.navigateTo({ url: "../../homeSub/pages/mealAnalysis/index?mealDate=" + _this.mealDate + "&mealType=" + _this.mealType });
        }).catch(function (err) {
            wx.showToast({ title: '提交食物记录失败', icon: 'none' });
        });
    };
    return textSearch;
}());
Page(new textSearch());
//# sourceMappingURL=data:application/json;base64,